datasource db {
    provider = "mongodb"
    url      = env("MONGODB_URI")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.String
    access_token      String? @db.String
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.String
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id               String        @id @default(auto()) @map("_id") @db.ObjectId
    legacyRedisId    String?       @unique
    name             String?
    email            String?       @unique
    emailVerified    DateTime?
    image            String?
    stripeCustomerId String?       @unique
    accounts         Account[]
    sessions         Session[]
    subscription     Subscription?
}

model VerificationToken {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String
    expires    DateTime

    @@unique([identifier, token])
}

model Subscription {
    id               String           @id @default(auto()) @map("_id") @db.ObjectId
    subId            String
    status           String
    type             SubscriptionType
    created_at       DateTime
    ends_on          DateTime
    User             User             @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId           String           @db.ObjectId
    stripeCustomerId String           @unique

    @@unique([userId])
}

enum SubscriptionType {
    subscription
    week_pass
}

model Cryptocurrency {
    id            String @id @default(auto()) @map("_id") @db.ObjectId
    coinId        String @unique
    name          String
    symbol        String
    image         String
    currentPrice  Float?
    marketCapRank Int?
    description   String
    prices        Json
}
